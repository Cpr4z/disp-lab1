name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use go version 1.21.1
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'
          cache-dependency-path: src/go.sum

      - name: Run tests
        run: cd src && make test

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'

      - name: Build Docker image
        run: docker build -t cr.yandex/${{ secrets.YC_REGISTRY_ID }}/my-go-service:latest .

      - name: Install Yandex CLI
        run: |
          curl https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          echo "PATH=$HOME/yandex-cloud/bin:$PATH" >> $GITHUB_ENV

      - name: Login (Yandex Cloud)
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.AUTHORIZED_KEY }}

      - name: Login to Yandex Container Registry
        run: yc container registry configure-docker

      - name: Push Docker image to Yandex Cloud
        run: docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/my-go-service:latest

      - name: Deploy Docker container on Yandex Cloud VM
        run: |
          yc compute instance create-with-container \
            --name my-instance \
            --zone ru-central1-a \
            --cores 2 \
            --memory 4 \
            --core-fraction 100 \
            --public-ip \
            --container-image cr.yandex/${{ secrets.YC_REGISTRY_ID }}/my-go-service:latest \
            --container-restart-policy always \
            --network-interface subnet-id=<SUBNET_ID>,nat-ip-version=ipv4
