name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop
jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use go version 1.21.1
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.1'
          cache-dependency-path: src/go.sum

      - name: Run tests
        run: cd src && make test

  deploy:
    name: Deploy service on VM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login (Yandex Cloud)
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.AUTHORIZED_KEY }}

#      - name: Build image (Yandex Cloud)
#        env:
#          CR_REGISTRY: crp5voalhkmqn0hcignj
#          CR_REPOSITORY: my-regystry
#          IMAGE_TAG: ${{ github.sha }}
#        run: |
#          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:user$IMAGE_TAG ./homeworks/K33412/Tanachev\ Egor/HW6/task/user
#          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:user$IMAGE_TAG
#          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:market$IMAGE_TAG ./homeworks/K33412/Tanachev\ Egor/HW6/task/market
#          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:market$IMAGE_TAG


      - name: Copy code to VM
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "src,Dockerfile,docker-compose.yml"
          target: /home/${{ secrets.SSH_USERNAME }}/person-service

      - name: Run app on VM
        uses: appleboy/ssh-action@v1.0.0
        env:
          YANDEX_KEY: ${{ secrets.YANDEX_KEY }}
          IMAGE_TAG: ${{ github.sha }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/${{ secrets.SSH_USERNAME }}/person-service
            sudo -S docker compose rm -f
            sudo -S docker compose pull
            sudo -S docker compose up --build -d